syntax = "proto3";

package com.mocker.mq;

message CreateTopicRequest {
  BrokerType broker_type = 1;

  string topic_name = 2;
}

message CreateTopicResponse {
  BrokerType broker_type = 1;

  string host = 2;

  uint32 port = 3;

  string topic_name = 4;
}

message SendMessageRequest {
  BrokerType broker_type = 1;

  MessagesContainer messages_container = 2;

  int32 repeat = 10;
}

message SendMessageResponse {
  bool success = 1;
}

message GetMessagesRequest {
  BrokerType broker_type = 1;

  string topic = 2;
}

message GetMessagesResponse {
  BrokerType broker_type = 1;

  repeated MessagesContainer messages = 2;
}

message GetTopicsRequest {
  BrokerType broker_type = 1;
}

message GetTopicsResponse {
  repeated Queue queues = 1;
}

message Queue {
  BrokerType broker_type = 1;
  string topic_name = 2;
}

message MessagesContainer {
  string queue = 1;
  string key = 2;
  string value = 3;
}

enum BrokerType {
  BROKER_TYPE_UNDEFINED = 0;
  BROKER_TYPE_KAFKA = 1;
  BROKER_TYPE_RABBITMQ = 2;
}

message DeleteTopicRequest {
  BrokerType broker_type = 1;
  string topic_name = 2;
}

message DeleteTopicResponse {
  bool success = 1;
}

service MqMocker {
  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse);

  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);

  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse);

  rpc GetTopics(GetTopicsRequest) returns (GetTopicsResponse);

  rpc DeleteTopic(DeleteTopicRequest) returns (DeleteTopicResponse);
}